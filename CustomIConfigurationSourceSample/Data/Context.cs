// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using ConsoleConfigurationLibrary.Models;
using CustomIConfigurationSourceSample.Classes;
using CustomIConfigurationSourceSample.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace CustomIConfigurationSourceSample.Data;

public partial class Context : DbContext
{
    public Context()
    {
    }

    public Context(DbContextOptions<Context> options)
        : base(options)
    {
    }

    public virtual DbSet<ConfigurationSetting> ConfigurationSettings { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetMainConnectionString());

    /// <summary>
    /// Configures the model for the database context by defining the shape of entities, their relationships,
    /// and database mapping.
    /// </summary>
    /// <param name="modelBuilder">
    /// An instance of <see cref="ModelBuilder"/> used to configure the model for the database context.
    /// </param>
    /// <remarks>
    /// This method is called when the model for a derived context is being created. It allows the configuration of entity types
    /// and relationships to be defined using the Fluent API. Any additional configuration can be implemented in the 
    /// <see cref="OnModelCreatingPartial"/> method.
    /// </remarks>
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ConfigurationSetting>(entity =>
        {
            entity.ToTable("ConfigurationSetting");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);

    /// <summary>
    /// Retrieves the main connection string from the application's configuration.
    /// </summary>
    /// <remarks>
    /// Can not use the <see cref="AppConfiguration"/> class to retrieve the main connection string here as <see cref="AppConfiguration"/>
    /// has not been initialized yet.  See <see cref="DatabaseConfigurationSource"/> which is responsible for loading data
    /// from the database.
    ///
    /// <see cref="Config.Configuration.JsonRoot()"/> where Config is an alias in the project file.
    /// 
    /// </remarks>
    /// <returns>
    /// A <see cref="string"/> representing the main connection string used for database connectivity.
    /// </returns>
    private static string GetMainConnectionString() 
        => Config.Configuration.JsonRoot()
            .GetSection(nameof(ConnectionStrings))
            .Get<ConnectionStrings>()
            .MainConnection;
}