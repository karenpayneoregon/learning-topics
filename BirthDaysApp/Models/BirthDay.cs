
// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using BirthDaysApp.Classes;



namespace BirthDaysApp.Models;

/// <summary>
/// Represents a birthday record, including details such as the person's name, birth date, and age.
/// </summary>
/// <remarks>
/// This class provides functionality to format and display birthday information, including the ability
/// to calculate and represent the age of the person.
/// </remarks>
public class BirthDay : IFormattable
{
    public int Id { get; set; }

    public string FirstName { get; set; }

    public string LastName { get; set; }

    public DateOnly BirthDate { get; set; }

    public int? YearsOld { get; set; }

    /// <summary>
    /// Returns a string representation of the birthday, including the full name and age of the person.
    /// </summary>
    /// <returns>
    /// A <see cref="string"/> that represents the full name and age of the person associated with this birthday record.
    /// </returns>
    /// <remarks>
    /// This method overrides the base <see cref="object.ToString"/> method to provide a more meaningful representation
    /// of the birthday record, combining the person's first name, last name, and calculated age.
    /// </remarks>
    public string ToString(string format, IFormatProvider formatProvider)
        => (format switch
        {
            "Id" => $"{Id, -5}",
            "F" or "FullName" => $"{FirstName} {LastName}",
            "A" or "Age" => YearsOld.HasValue ? YearsOld.Value.ToString() : "Unknown",
            _ => base.ToString()
        })!;
    /// <summary>
    /// Returns a string representation of the customer, including their full name and age.
    /// </summary>
    /// <returns>A <see cref="string"/> containing the customer's full name and age.</returns>
    public override string ToString()
        => $"{FirstName} {LastName}, age {BirthDate.GetAge()}";
}