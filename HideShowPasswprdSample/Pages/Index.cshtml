@page
@using HideShowPasswordSample.Pages
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container">
    
    <div class="alert alert-primary" role="alert">
        <h1 class="fs-5">Password toggles</h1>
    </div>

    <form method="post">

        <div class="row mb-3">
            <div class="col-4">
                <label for="password1">Standard placement</label>
                <input id="password1"
                       data-toggle="password"
                       class="form-control"
                       type="password"
                       maxlength="20"
                       data-size="sm" @* use size small for input/eye remove for default size or use lg *@
                       placeholder="Enter the password"
                       name="PasswordContainer.Password1"
                       value="@Model.PasswordContainer.Password1">
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-4">
                <label for="password2">left placement</label>
                <input id="password2"
                       data-toggle="password"
                       data-placement="before" @* placed eye before input *@
                       class="form-control"
                       type="password"
                       data-size="sm"
                       placeholder="Enter the password"
                       name="PasswordContainer.Password2"
                       value="@Model.PasswordContainer.Password2">
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-4">
                <label for="password3">Custom placeholder</label>
                <input id="password3"
                       data-toggle="password"
                       data-placement="before"
                       class="form-control"
                       type="password"
                       data-size="sm"
                       placeholder="your password" name="PasswordContainer.Password3"
                       value="@Model.PasswordContainer.Password3">
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-4">
                <div class="fw-bold text-primary">Event log for show/hide passwords</div>
                <pre id="passwordLog" class="border p-2" style="height: 150px; overflow: auto;"></pre>
            </div>
        </div>

        <div class="row">
            <div>
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </div>
    </form>

</div>

@section Scripts
{
    <script>
        $(function () {
            var $log = $('#passwordLog');

            function writeLog(message) {
                var current = $log.text();
                $log.text(current + message + "\n");
                $log.scrollTop($log[0].scrollHeight);
            }

            $('input[data-toggle="password"]').each(function () {
                var $input = $(this);

                // Try to find the plugin's eye toggle next to the input
                var $toggle = $input
                    .siblings('button')
                    .add($input.siblings('.input-group-append').find('.btn'))
                    .add($input.siblings('.input-group-prepend').find('.btn'))
                    .first();

                if ($input.is(':disabled')) {
                    // Ensure no event handlers are attached
                    $input.off('show.bs.password hide.bs.password');

                    // Visually and functionally disable the eye toggle if present
                    if ($toggle.length) {
                        $toggle
                            .attr('disabled', 'disabled')
                            .attr('aria-disabled', 'true')
                            .attr('title', 'Password field is disabled')
                            .addClass('disabled');

                        // Block clicks just in case
                        $toggle.on('click.password-block', function (e) {
                            e.preventDefault();
                            e.stopImmediatePropagation();
                            return false;
                        });
                    }

                    // Skip binding
                    return;
                }

                // Enabled inputs: bind plugin events (do NOT call .password() here)
                $input
                    .on('show.bs.password', function () {
                        writeLog(`show.bs.password fired for #${this.id}`);
                    })
                    .on('hide.bs.password', function () {
                        writeLog(`hide.bs.password fired for #${this.id}`);
                    });
            });
        });
    </script>

    <style>
        /*
                * Make disabled toggle clearly inert even if theme doesn't handle it
                * Can be placed in site-wide CSS if desired or a page specific .css file
                */
        .btn.disabled, .btn[disabled] {
            pointer-events: none;
            opacity: .5;
        }
    </style>
}
